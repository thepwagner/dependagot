// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dependabot/v1/dependabot.proto

package dependabot_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FilesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilesRequest) Reset()         { *m = FilesRequest{} }
func (m *FilesRequest) String() string { return proto.CompactTextString(m) }
func (*FilesRequest) ProtoMessage()    {}
func (*FilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01c0e8ee9522243d, []int{0}
}

func (m *FilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesRequest.Unmarshal(m, b)
}
func (m *FilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesRequest.Marshal(b, m, deterministic)
}
func (m *FilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesRequest.Merge(m, src)
}
func (m *FilesRequest) XXX_Size() int {
	return xxx_messageInfo_FilesRequest.Size(m)
}
func (m *FilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FilesRequest proto.InternalMessageInfo

type FilesResponse struct {
	Paths                []string `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilesResponse) Reset()         { *m = FilesResponse{} }
func (m *FilesResponse) String() string { return proto.CompactTextString(m) }
func (*FilesResponse) ProtoMessage()    {}
func (*FilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01c0e8ee9522243d, []int{1}
}

func (m *FilesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesResponse.Unmarshal(m, b)
}
func (m *FilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesResponse.Marshal(b, m, deterministic)
}
func (m *FilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesResponse.Merge(m, src)
}
func (m *FilesResponse) XXX_Size() int {
	return xxx_messageInfo_FilesResponse.Size(m)
}
func (m *FilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FilesResponse proto.InternalMessageInfo

func (m *FilesResponse) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

func init() {
	proto.RegisterType((*FilesRequest)(nil), "dependabot.v1.FilesRequest")
	proto.RegisterType((*FilesResponse)(nil), "dependabot.v1.FilesResponse")
}

func init() {
	proto.RegisterFile("dependabot/v1/dependabot.proto", fileDescriptor_01c0e8ee9522243d)
}

var fileDescriptor_01c0e8ee9522243d = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0x49, 0x2d, 0x48,
	0xcd, 0x4b, 0x49, 0x4c, 0xca, 0x2f, 0xd1, 0x2f, 0x33, 0xd4, 0x47, 0xf0, 0xf4, 0x0a, 0x8a, 0xf2,
	0x4b, 0xf2, 0x85, 0x78, 0x91, 0x44, 0xca, 0x0c, 0x95, 0xf8, 0xb8, 0x78, 0xdc, 0x32, 0x73, 0x52,
	0x8b, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x94, 0x54, 0xb9, 0x78, 0xa1, 0xfc, 0xe2, 0x82,
	0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x11, 0x2e, 0xd6, 0x82, 0xc4, 0x92, 0x8c, 0x62, 0x09, 0x46, 0x05,
	0x66, 0x0d, 0xce, 0x20, 0x08, 0xc7, 0x28, 0x98, 0x8b, 0x37, 0xb4, 0x20, 0x25, 0xb1, 0x24, 0x35,
	0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x89, 0x8b, 0x15, 0xac, 0x4f, 0x48, 0x5a, 0x0f,
	0xc5, 0x02, 0x3d, 0x64, 0xd3, 0xa5, 0x64, 0xb0, 0x4b, 0x42, 0xac, 0x4a, 0x62, 0x03, 0xbb, 0xd0,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x31, 0x68, 0x4a, 0xc3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UpdateServiceClient is the client API for UpdateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpdateServiceClient interface {
	Files(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesResponse, error)
}

type updateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUpdateServiceClient(cc grpc.ClientConnInterface) UpdateServiceClient {
	return &updateServiceClient{cc}
}

func (c *updateServiceClient) Files(ctx context.Context, in *FilesRequest, opts ...grpc.CallOption) (*FilesResponse, error) {
	out := new(FilesResponse)
	err := c.cc.Invoke(ctx, "/dependabot.v1.UpdateService/Files", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpdateServiceServer is the server API for UpdateService service.
type UpdateServiceServer interface {
	Files(context.Context, *FilesRequest) (*FilesResponse, error)
}

// UnimplementedUpdateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUpdateServiceServer struct {
}

func (*UnimplementedUpdateServiceServer) Files(ctx context.Context, req *FilesRequest) (*FilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Files not implemented")
}

func RegisterUpdateServiceServer(s *grpc.Server, srv UpdateServiceServer) {
	s.RegisterService(&_UpdateService_serviceDesc, srv)
}

func _UpdateService_Files_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpdateServiceServer).Files(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dependabot.v1.UpdateService/Files",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpdateServiceServer).Files(ctx, req.(*FilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UpdateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dependabot.v1.UpdateService",
	HandlerType: (*UpdateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Files",
			Handler:    _UpdateService_Files_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dependabot/v1/dependabot.proto",
}
