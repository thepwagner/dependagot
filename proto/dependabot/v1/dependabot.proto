syntax = "proto3";

package dependabot.v1;

message Dependency {
  string package = 1;
  string version = 2;
}

message FilesRequest {
  // Data for the update context, indexed by path
  map<string,bytes> files = 1;
}
message FilesResponse {
  // Paths essential to parsing the update
  repeated string required_paths = 1;
  repeated string optional_paths = 2;
}

message ListDependenciesRequest {}
message ListDependenciesResponse {
  repeated Dependency dependencies = 1;
}

message UpdateDependenciesRequest {
    repeated Dependency dependencies = 1;
}
message UpdateDependenciesResponse {
    map<string,string> new_files = 1;
}

service UpdateService {
  // Files uploads data and returns a list of paths of interest
  // Clients should loop until required_paths is empty, 
  // and fail if required_paths can't be loaded.
  rpc Files(FilesRequest) returns (FilesResponse);

  rpc ListDependencies(ListDependenciesRequest) returns (ListDependenciesResponse);

  rpc UpdateDependencies(UpdateDependenciesRequest) returns (UpdateDependenciesResponse);
}
